{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\nimport axios from 'axios';\n\nconst API_KEY = '49632917-f700970c30bc9937fd82e83ee';\nconst URL = 'https://pixabay.com/api/';\n\nexport async function getImagesByQuery(query, page) {\n  try {\n    const response = await axios.get(URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page,\n        per_page: 15,\n      },\n    });\n    return response.data;  // Returning the 'data' directly\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    \n  }\n}","\n// export function createGallery(getedObject) {\n//   const neccesaryArray = getedObject.hits;\n//   return neccesaryArray\n//     .map(\n//       ({\n//         webformatURL,\n//         largeImageURL,\n//         tags,\n//         likes,\n//         views,\n//         comments,\n//         downloads,\n//       }) => `\n//         <li class=\"card\">\n//             <div class=\"place-for-image\">\n//                 <a href=\"${largeImageURL}\">\n//                     <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"picture\"/>\n//                 </a>\n//             </div>\n//             <div class=\"info-text\">\n//                 <div class=\"description\">\n//                     <span class=\"bold-text\">Likes</span>\n//                     <span class=\"info-value\">${likes}</span>\n//                 </div>\n//                 <div class=\"description\">\n//                     <span class=\"bold-text\">Views</span>\n//                     <span class=\"info-value\">${views}</span>\n//                 </div>\n//                 <div class=\"description\">\n//                     <span class=\"bold-text\">Comments</span>\n//                     <span class=\"info-value\">${comments}</span>\n//                 </div>\n//                 <div class=\"description\">\n//                     <span class=\"bold-text\">Downloads</span>\n//                     <span class=\"info-value\">${downloads}</span>\n//                 </div>\n//             </div>\n//         </li>`\n//     )\n//     .join('');\n// }\nexport function createGallery(getedObject) {\n  const neccesaryArray = getedObject.hits;\n  return neccesaryArray\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n        <li class=\"card\">\n            <div class=\"place-for-image\">\n                <a href=\"${largeImageURL}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"picture\"/>\n                </a>\n            </div>\n            <div class=\"info-text\">\n                <div class=\"description\">\n                    <span class=\"bold-text\">Likes</span>\n                    <span class=\"info-value\">${likes}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Views</span>\n                    <span class=\"info-value\">${views}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Comments</span>\n                    <span class=\"info-value\">${comments}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Downloads</span>\n                    <span class=\"info-value\">${downloads}</span>\n                </div>\n            </div>\n        </li>`\n    )\n    .join('');\n}\n\nexport function showLoader() {\n  document.querySelector('.loader').classList.remove('hidden');\n  document.querySelector('.loader').classList.add('show');\n}\n\nexport function hideLoader() {\n  document.querySelector('.loader').classList.remove('show');\n  document.querySelector('.loader').classList.add('hidden');\n}\n","\n// import { getImagesByQuery } from './js/pixabay-api.js';\n\n// import { createGallery } from './js/render-functions.js';\n\n// import SimpleLightbox from 'simplelightbox';\n\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import iziToast from 'izitoast';\n\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// function showToast({ title = 'Oops!', message = '', color = 'red' }) {\n//   iziToast.show({\n//     title,\n//     titleColor: 'white',\n//     message,\n//     messageColor: 'white',\n//     color,\n//     position: 'topCenter',\n//     timeout: 5000,\n//   });\n// }\n\n// const form = document.querySelector('.form');\n// const loader = document.querySelector('.loader');\n\n// const photoGallery = document.querySelector('.gallery');\n\n// const buttonMore = document.querySelector('.buttonMore');\n\n// const book = new SimpleLightbox('.card .place-for-image a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// form.addEventListener('submit', handleSearch);\n// buttonMore.addEventListener('click', searchMore);\n\n// let page = 1;\n// let searchWord;\n\n// async function handleSearch(event) {\n//   event.preventDefault();\n//   buttonMore.hidden = true;\n//   photoGallery.innerHTML = '';\n//   loader.hidden = false;\n\n//   searchWord = event.currentTarget.elements.inputSearch.value.trim();\n\n//   if (searchWord === '') {\n//     showToast({ message: 'No images found. Try another query.' });\n//     loader.hidden = true;\n//     return;\n//   }\n\n//   page = 1;\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.total === 0) {\n//       iziToast.show({\n//         title: 'Oops!',\n//         titleColor: 'white',\n//         message: 'No images found. Try another query.',\n//         messageColor: 'white',\n//         color: 'red',\n//         position: 'topCenter',\n//         timeout: 5000,\n//       });\n//       return;\n//     }\n\n//     buttonMore.hidden = false;\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.data));\n//     book.refresh();\n//     event.target.reset();\n//     page += 1;\n\n//     if (photoGallery.children.length >= data.data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     loader.hidden = true;\n//   }\n// }\n\n// async function searchMore() {\n//   buttonMore.hidden = true;\n\n//   loader.hidden = false;\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.total === 0) {\n//       showToast({ message: 'No more images found.' });\n\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.data));\n//     book.refresh();\n//     page ++;\n\n//     const { height: cardHeight } =\n//       photoGallery.firstElementChild.getBoundingClientRect();\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n\n//     if (photoGallery.children.length >= data.data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     } else {\n//       buttonMore.hidden = false;\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     loader.hidden = true;\n//   }\n// }\n// import { getImagesByQuery } from './js/pixabay-api.js';\n// import { createGallery, showLoader, hideLoader } from './js/render-functions.js';\n\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// function showToast({ title = 'Oops!', message = '', color = 'red' }) {\n//   iziToast.show({\n//     title,\n//     titleColor: 'white',\n//     message,\n//     messageColor: 'white',\n//     color,\n//     position: 'topCenter',\n//     timeout: 5000,\n//   });\n// }\n\n// const form = document.querySelector('.form');\n// const photoGallery = document.querySelector('.gallery');\n// const buttonMore = document.querySelector('.buttonMore');\n\n// const lightbox = new SimpleLightbox('.card .place-for-image a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// form.addEventListener('submit', handleSearch);\n// buttonMore.addEventListener('click', searchMore);\n\n// let page = 1;\n// let searchWord;\n\n// async function handleSearch(event) {\n//   event.preventDefault();\n//   buttonMore.hidden = true;\n//   photoGallery.innerHTML = '';\n//   showLoader();\n\n//   searchWord = event.currentTarget.elements.inputSearch.value.trim();\n\n//   if (searchWord === '') {\n//     showToast({ message: 'No images found. Try another query.' });\n//     hideLoader();\n//     return;\n//   }\n\n//   page = 1;\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.total === 0) {\n//       showToast({ message: 'No images found. Try another query.' });\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.data));\n//     lightbox.refresh();\n//     event.target.reset();\n//     buttonMore.hidden = false;\n//     page += 1;\n\n//     if (photoGallery.children.length >= data.data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n// async function searchMore() {\n//   buttonMore.hidden = true;\n//   showLoader();\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.total === 0) {\n//       showToast({ message: 'No more images found.' });\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.data));\n//     lightbox.refresh();\n//     page++;\n\n//     const { height: cardHeight } =\n//       photoGallery.firstElementChild.getBoundingClientRect();\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n\n//     if (photoGallery.children.length >= data.data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     } else {\n//       buttonMore.hidden = false;\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n// import { getImagesByQuery } from './js/pixabay-api.js';\n// import { createGallery, showLoader, hideLoader } from './js/render-functions.js';\n\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// function showToast({ title = 'Oops!', message = '', color = 'red' }) {\n//   iziToast.show({\n//     title,\n//     titleColor: 'white',\n//     message,\n//     messageColor: 'white',\n//     color,\n//     position: 'topCenter',\n//     timeout: 5000,\n//   });\n// }\n\n// const form = document.querySelector('.form');\n// const photoGallery = document.querySelector('.gallery');\n// const buttonMore = document.querySelector('.buttonMore');\n\n// const lightbox = new SimpleLightbox('.card .place-for-image a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// form.addEventListener('submit', handleSearch);\n// buttonMore.addEventListener('click', searchMore);\n\n// let page = 1;\n// let searchWord;\n\n// async function handleSearch(event) {\n//   event.preventDefault();\n//   buttonMore.hidden = true;\n//   photoGallery.innerHTML = '';\n//   showLoader();\n\n//   searchWord = event.currentTarget.elements.inputSearch.value.trim();\n\n//   if (searchWord === '') {\n//     showToast({ message: 'Please enter a search query.' });\n//     hideLoader();\n//     return;\n//   }\n\n//   page = 1;\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.totalHits === 0) {\n//       showToast({ message: 'No images found. Try another query.' });\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.hits));\n//     lightbox.refresh();\n//     event.target.reset();\n//     buttonMore.hidden = false;\n//     page += 1;\n\n//     if (photoGallery.children.length >= data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n// async function searchMore() {\n//   buttonMore.hidden = true;\n//   showLoader();\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.totalHits === 0) {\n//       showToast({ message: 'No more images found.' });\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data.hits));\n//     lightbox.refresh();\n//     page++;\n\n//     const { height: cardHeight } = photoGallery.firstElementChild.getBoundingClientRect();\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n\n//     if (photoGallery.children.length >= data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     } else {\n//       buttonMore.hidden = false;\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n// import { getImagesByQuery } from './js/pixabay-api.js';\n// import { createGallery, showLoader, hideLoader } from './js/render-functions.js';\n\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// function showToast({ title = 'Oops!', message = '', color = 'red' }) {\n//   iziToast.show({\n//     title,\n//     titleColor: 'white',\n//     message,\n//     messageColor: 'white',\n//     color,\n//     position: 'topCenter',\n//     timeout: 5000,\n//   });\n// }\n\n// const form = document.querySelector('.form');\n// const photoGallery = document.querySelector('.gallery');\n// const buttonMore = document.querySelector('.buttonMore');\n\n// const lightbox = new SimpleLightbox('.gallery a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// form.addEventListener('submit', handleSearch);\n// buttonMore.addEventListener('click', searchMore);\n\n// let page = 1;\n// let searchWord;\n\n// async function handleSearch(event) {\n//   event.preventDefault();\n//   buttonMore.hidden = true;\n//   photoGallery.innerHTML = '';\n//   showLoader();\n\n//   searchWord = event.currentTarget.elements.inputSearch.value.trim();\n\n//   if (searchWord === '') {\n//     showToast({ message: 'Please enter a search query.' });\n//     hideLoader();\n//     return;\n//   }\n\n//   page = 1;\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.totalHits === 0) {\n//       showToast({ message: 'No images found. Try another query.' });\n//       hideLoader();\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data)); // Pass data, not data.hits\n//     lightbox.refresh();\n//     event.target.reset();\n//     buttonMore.hidden = false;\n//     page += 1;\n\n//     if (photoGallery.children.length >= data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n// async function searchMore() {\n//   buttonMore.hidden = true;\n//   showLoader();\n\n//   try {\n//     const data = await getImagesByQuery(searchWord, page);\n\n//     if (data.totalHits === 0) {\n//       showToast({ message: 'No more images found.' });\n//       return;\n//     }\n\n//     photoGallery.insertAdjacentHTML('beforeend', createGallery(data)); // Pass data, not data.hits\n//     lightbox.refresh();\n//     page++;\n\n//     const { height: cardHeight } = photoGallery.firstElementChild.getBoundingClientRect();\n//     window.scrollBy({\n//       top: cardHeight * 2,\n//       behavior: 'smooth',\n//     });\n\n//     if (photoGallery.children.length >= data.totalHits) {\n//       buttonMore.hidden = true;\n//       showToast({\n//         title: 'Info',\n//         message: \"You've reached the end of search results.\",\n//         color: 'blue',\n//       });\n//     } else {\n//       buttonMore.hidden = false;\n//     }\n//   } catch (error) {\n//     buttonMore.hidden = true;\n//     showToast({ title: 'Error!', message: error.message });\n//   } finally {\n//     hideLoader();\n//   }\n// }\n\n\n//////////////////////////////////////////////////////////////\n\nimport { getImagesByQuery } from './js/pixabay-api.js';\nimport { createGallery, showLoader, hideLoader } from './js/render-functions.js';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction showToast({ title = 'Oops!', message = '', color = 'red' }) {\n  iziToast.show({\n    title,\n    titleColor: 'white',\n    message,\n    messageColor: 'white',\n    color,\n    position: 'topCenter',\n    timeout: 5000,\n  });\n}\n\nconst form = document.querySelector('.form');\nconst photoGallery = document.querySelector('.gallery');\nconst buttonMore = document.querySelector('.buttonMore');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nform.addEventListener('submit', handleSearch);\nbuttonMore.addEventListener('click', searchMore);\n\nlet page = 1;\nlet searchWord;\n\nasync function handleSearch(event) {\n  event.preventDefault();\n  buttonMore.hidden = true;\n  photoGallery.innerHTML = '';\n  showLoader();\n\n  searchWord = event.currentTarget.elements.inputSearch.value.trim();\n\n  if (searchWord === '') {\n    showToast({ message: 'Please enter a search query.' });\n    hideLoader();\n    return;\n  }\n\n  page = 1;\n\n  try {\n    const data = await getImagesByQuery(searchWord, page);\n\n    if (data.totalHits === 0) {\n      showToast({ message: 'No images found. Try another query.' });\n      hideLoader();\n      return;\n    }\n\n    photoGallery.insertAdjacentHTML('beforeend', createGallery(data)); // Pass data, not data.hits\n    lightbox.refresh();\n    event.target.reset();\n    buttonMore.hidden = false;\n    page += 1;\n\n    if (photoGallery.children.length >= data.totalHits) {\n      buttonMore.hidden = true;\n      showToast({\n        title: 'Info',\n        message: \"You've reached the end of search results.\",\n        color: 'blue',\n      });\n    }\n  } catch (error) {\n    buttonMore.hidden = true;\n    showToast({ title: 'Error!', message: error.message });\n  } finally {\n    hideLoader();\n  }\n}\n\nasync function searchMore() {\n  buttonMore.hidden = true;\n  showLoader();\n\n  try {\n    const data = await getImagesByQuery(searchWord, page);\n\n    if (data.totalHits === 0) {\n      showToast({ message: 'No more images found.' });\n      return;\n    }\n\n    photoGallery.insertAdjacentHTML('beforeend', createGallery(data)); // Pass data, not data.hits\n    lightbox.refresh();\n    page++;\n\n    const { height: cardHeight } = photoGallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n\n    if (photoGallery.children.length >= data.totalHits) {\n      buttonMore.hidden = true;\n      showToast({\n        title: 'Info',\n        message: \"You've reached the end of search results.\",\n        color: 'blue',\n      });\n    } else {\n      buttonMore.hidden = false;\n    }\n  } catch (error) {\n    buttonMore.hidden = true;\n    showToast({ title: 'Error!', message: error.message });\n  } finally {\n    hideLoader();\n  }\n}"],"names":["API_KEY","URL","getImagesByQuery","query","page","axios","error","createGallery","getedObject","webformatURL","largeImageURL","tags","likes","views","comments","downloads","showLoader","hideLoader","showToast","title","message","color","iziToast","form","photoGallery","buttonMore","lightbox","SimpleLightbox","handleSearch","searchMore","searchWord","event","data","cardHeight"],"mappings":"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"}